<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!-- 
    <mvc:cors>
        <mvc:mapping path="/**"
            allowed-origins="*"
            allowed-headers="*"
            allow-credentials="true"
            max-age="3600"
            allowed-methods="GET,POST,PUT,OPTIONS,DELETE"/>
    </mvc:cors>
     -->

    <context:component-scan base-package="com.aiw"></context:component-scan>
    <mvc:annotation-driven/>
    
   	<mvc:resources location="/" mapping="/**/*.*"/>    

    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- @ResponseBody 不返回空对象及变量 -->
     <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
         <property name="objectMapper">
             <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                 <property name="serializationInclusion">
                    <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                 </property>
             </bean>
        </property>
      </bean>
    
    <bean class ="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" >  
	    <property name="messageConverters">  
		  <list>  
		   <ref bean="mappingJacksonHttpMessageConverter" /><!-- json转换器 -->  
		  </list>  
		</property>  
	</bean>      
    
    
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
    <!-- http://blog.csdn.net/sdmxdzb/article/details/48049527 spring mvc异常处理的三种方式 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    
    	<!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
    	<property name="defaultErrorView"  value="error"></property>  
    	<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->  
    	<property name="exceptionAttribute" value="ex"></property>  
    	<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
        <property name="exceptionMappings">
            <props>
            	<!-- 没有权限的页面 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">unauthorized</prop>
                
            </props>
        </property>
    </bean>
    
    
    <!-- <aop:config>
 		 <aop:pointcut id="businessService"  
               expression="execution(* com.aiw.controller.base.*.*(..))" />  
         <aop:aspect ref="requestRecordInterceptorInterceptor">  
            <aop:around pointcut-ref="businessService" method="doAround"/>  
        </aop:aspect>   
        
    </aop:config>
    <bean id="requestRecordInterceptorInterceptor" class="com.aiw.extend.RequestRecordAOPInterceptor"></bean> 
    
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      	<property name="maxUploadSize" value="10485760" /> 
      	<property name="defaultEncoding" value="utf-8"></property>
	</bean>
    
    
    
    <mvc:interceptors>  
     <!-- 多个拦截器，顺序执行 -->  
    
      <!-- 配置登陆拦截器 -->  
      <mvc:interceptor>  
          <mvc:mapping path="/bdzb/app2/**"/>  
          <mvc:exclude-mapping path="/bdzb/app2/login"/>
          <mvc:exclude-mapping path="/bdzb/app2/register"/>
          <bean class="com.aiw.extend.AppLoginHandlerIntercepter"></bean>  
      </mvc:interceptor>  
     </mvc:interceptors>  
    
    
</beans>